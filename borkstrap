#!/usr/bin/env ruby

# === borkstrap ===
# https://github.com/alfiepates/borkstrap

require 'optparse'
require 'net/http'
require 'tempfile'

module Borkstrap
	class OptionParser
		def initialize(arguments)
			@arguments = arguments
		end

		def call
			options = {}
			::OptionParser.new do |option_parser|
				option_parser.banner = "Usage: ./borkstrap [options]"

				option_parser.on("-r", "--repo repository", String,
					"Pull a Git repository with a Bork configuration") do |repository|

					options[:repo] =
						if github_shortname?(repository)
							"https://github.com/#{repository}"
						else
							repository
						end
				end
			end.parse!(@arguments)
			options
		end

		private

		def github_shortname?(url)
			url.scan("/").length == 1
		end
	end

	class Host
		def self.current
			new(mac: RUBY_PLATFORM =~ /darwin/)
		end

		def initialize(mac: raise(ArgumentError, "missing keyword :mac"))
			@mac = mac
		end

		def mac?
			@mac
		end
	end

	class BrewInstall
		def initialize(install_script_url: raise(ArgumentError, "missing keyword :install_script_url"))
			@install_script_uri = URI(install_script_url)
		end

		def install_script
			@install_script ||= fetch_install_script
		end

		private

		def fetch_install_script
			install_script_on_disk = Tempfile.new('brew-install')
			Net::HTTP.start(@install_script_uri.host, @install_script_uri.port, use_ssl: true) do |http|
				request = Net::HTTP::Get.new @install_script_uri

				http.request request do |response|
					response.read_body do |chunk|
						install_script_on_disk.write chunk
					end
					install_script_on_disk.rewind
				end
			end
			install_script_on_disk
		end
	end
end

if __FILE__ == $0
	Borkstrap::OptionParser.new(ARGV).call
end
